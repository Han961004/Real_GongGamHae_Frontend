{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Real_GongGamHae_Frontend-Joonsik\\\\Real_GongGamHae_Frontend-Joonsik\\\\my-app\\\\src\\\\components\\\\common\\\\side.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Side = () => {\n  _s();\n  const [bestPosts, setBestPosts] = useState([]);\n  const [recentPosts, setRecentPosts] = useState([]);\n  const [sidePosts, setSidePosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBestPosts = async () => {\n      try {\n        const bestpostEndpoint = `http://localhost:8080/api/gonggamposts/best`;\n        const response = await fetch(bestpostEndpoint, {\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch best posts');\n        }\n        const data = await response.json();\n        console.log(data, 1111);\n        setBestPosts(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    const fetchSidePosts = async () => {\n      try {\n        const sidepostEndpoint = 'http://localhost:8080/api/gonggamposts/sideposts';\n        const response = await fetch(sidepostEndpoint, {\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch side posts');\n        }\n        const data = await response.json();\n        console.log(data, 2222);\n        data.forEach(item => {\n          if (item.category === 'recentPosts') {\n            setRecentPosts(item.posts);\n          } else if (item.category === 'bestPosts') {\n            setBestPosts(item.posts);\n          }\n        });\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchBestPosts();\n    fetchSidePosts();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Best Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: bestPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/posts/${post.id}`,\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: recentPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/api/gonggamposts/${post.id}`,\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Side, \"qKtXmTD8yuL+144tRtSDqdiAWl4=\");\n_c = Side;\nexport default Side;\nvar _c;\n$RefreshReg$(_c, \"Side\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Side","_s","bestPosts","setBestPosts","recentPosts","setRecentPosts","sidePosts","setSidePosts","error","setError","fetchBestPosts","bestpostEndpoint","response","fetch","credentials","ok","Error","data","json","console","log","message","fetchSidePosts","sidepostEndpoint","forEach","item","category","posts","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","href","id","title","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Real_GongGamHae_Frontend-Joonsik/Real_GongGamHae_Frontend-Joonsik/my-app/src/components/common/side.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Side = () => {\r\n  const [bestPosts, setBestPosts] = useState([]);\r\n  const [recentPosts, setRecentPosts] = useState([]);\r\n  const [sidePosts, setSidePosts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchBestPosts = async () => {\r\n      try {\r\n        const bestpostEndpoint = `http://localhost:8080/api/gonggamposts/best`;\r\n        const response = await fetch(bestpostEndpoint, { credentials: 'include' });\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch best posts');\r\n        }\r\n        const data = await response.json();\r\n        console.log(data,1111)\r\n        setBestPosts(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    const fetchSidePosts = async () => {\r\n        try {\r\n          const sidepostEndpoint = 'http://localhost:8080/api/gonggamposts/sideposts';\r\n          const response = await fetch(sidepostEndpoint, { credentials: 'include' });\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch side posts');\r\n          }\r\n          const data = await response.json();\r\n          \r\n          console.log(data,2222)\r\n\r\n          data.forEach(item => {\r\n            if (item.category === 'recentPosts') {\r\n              setRecentPosts(item.posts);\r\n            } else if (item.category === 'bestPosts') {\r\n              setBestPosts(item.posts);\r\n            }\r\n          });\r\n        } catch (error) {\r\n          setError(error.message);\r\n        }\r\n      };\r\n      fetchBestPosts();\r\n      fetchSidePosts();\r\n    }, []);\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Best Posts</h2>\r\n      <ul>\r\n        {bestPosts.map((post) => (\r\n          <li key={post.id}>\r\n            <a href={`/posts/${post.id}`}>{post.title}</a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2>Recent Posts</h2>\r\n      <ul>\r\n        {recentPosts.map((post) => (\r\n          <li key={post.id}>\r\n            <a href={`/api/gonggamposts/${post.id}`}>{post.title}</a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Side;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}